%%time

import requests
import pandas as pd
import time
from datetime import datetime



df = pd.read_excel("/Users/apple/Downloads/stock_ticker.xlsx")

ticker = df["symbol_names"].tolist()

def weird_division(n, d):
    return n / d if d else 0

results =[]

headers = {
    'Accept':'*/*',
    'Accept-Encoding':'gzip, deflate, br',
    'Accept-Language':'en-GB,en-US;q=0.9,en;q=0.8',
    'Cookie': '_ga=GA1.1.447891677.1697081903; defaultLang=en; nsit=WZxTmqtwVuiB0FF1wCtMlnV7; AKA_A2=A; ak_bmsc=90D2DFC846150D2E88F8B30AE4C77F92~000000000000000000000000000000~YAAQHZUvF9F+spGLAQAA4v+2pRX/S8ZATRKTjD4qTC7yMLxPlDemFw8fyCkoVXnVP78EhlMFgtEqOuBlL20klHzfzFLGvSV/BDfqNNW8HN+iWW85VAAK5856EXP7aNS1EUgXRNv1eOnx4KDc3WnJ6pJD7B96ONr8Z8jaqUbkp9GSmtZzzNihd2N6GARMSzRDTlcMPyIalhOwpdLr5gLFBubeqrqhYJ1FJ762LriEm+DKr72FEWH1y5injjMaZmxJMYidrD6AHfPlqRCmnfBsdTfE3LdmpF2/ioC4xaT5cjY15zpelgPi6p/881582fv50GkOtZ6Ien+EFq39fYlbEy/XJvJvxbewDoKJ9ir8seZ1WedvQ4BAY49V/J6hJHboib2CAupHSg2HVNSRiYYU4qNGHPvIlb4RdDJYqEmAm1i6ZLnJHahp2MceN4tOx4hWX5SyMB8N/4tXq5Yo0cdH4n5MAopRImEttlEdYbRfr4nBAhMOsn/wSDY9fDnWQRZrVg==; nseQuoteSymbols=[{"symbol":"RELIANCE","identifier":null,"type":"equity"}]; nseappid=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcGkubnNlIiwiYXVkIjoiYXBpLm5zZSIsImlhdCI6MTY5OTI5MjMyOSwiZXhwIjoxNjk5Mjk5NTI5fQ._7wiRErSildb0QrjhocmMmJeetKfSrSKEhSK-m6EK2Q; RT="z=1&dm=nseindia.com&si=b8439ca3-8e8b-4fb4-a955-6b39f9e8252e&ss=lon6rono&sl=2&se=8c&tt=2tw&bcn=%2F%2F684d0d46.akstat.io%2F"; bm_sv=8D928DAF824D196769E324FFDAC1EE3A~YAAQHZUvF1qAspGLAQAADjm3pRWA5e/m7KCZZCpAXzoNbd8/mVSoqDIErS3KOVL8UbSHcIrug84aL2JVOrjQmtlX/WC4fddOzrFc5/6fj3ngqjCMT3PpamuN7l1GBEJo7EWirX020YuyWRkQOEsRgbYYKeYZaOyN450C21mgirObM+K7Ui6AnQB+IGqv9AmFz9IMhfn5+ilbON1m6K4XVE+rReqNo+kDIZ9NTcp/U4qOq/gbl2Km7i5KVcycDjxk1pvs~1; _ga_PJSKY6CFJH=GS1.1.1699292315.32.1.1699292330.45.0.0',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36',
          }

print('calculations begin')
process_start_time = time.time()  #change the cookie
print(process_start_time)

for symbol_names in ticker :
    if symbol_names == "balajithegreat": 
        break
    response = requests.get(url="https://www.nseindia.com/api/quote-equity?symbol="+symbol_names+"&section=trade_info", headers=headers)
    buy_quantity = response.json()['marketDeptOrderBook']['totalBuyQuantity']
    sell_quantity = response.json()['marketDeptOrderBook']['totalSellQuantity']
    trade_volume =response.json()['marketDeptOrderBook']['tradeInfo']['totalTradedVolume']
    delivery_percentage =response.json()['securityWiseDP']['deliveryToTradedQuantity']
    marketcap =response.json()['marketDeptOrderBook']['tradeInfo']['totalMarketCap']
    print(symbol_names)
    #if weird_division(buy_quantity,trade_volume)*100 > 20:
    results.append({
            'symbol_names': symbol_names,
            'buy_quantity': buy_quantity,
            'sell_quantity': sell_quantity,
            'trade_volume': trade_volume,
            'delivery_percentage': delivery_percentage,
            'marketcap' : marketcap
    })
result_df = pd.DataFrame(results)
print(result_df)
process_end_time = time.time()
print(process_end_time)
current_datetime = datetime.now()
date_time_str = current_datetime.strftime("%Y%m%d_%H-%M-%S")
file_name = f'/Users/apple/Downloads/stock_data_{date_time_str}.csv'
result_df.to_csv(file_name, index=False)
